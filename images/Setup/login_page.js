let instanceActive=!0;function getGameInstance(e){let t=window.Phaser;if(void 0!==t){let n=window.Phaser,a=n.Game,r=new Proxy(a,{construct:function t(n,a){let r=new n(...a);return e(r),r}});n.Game=r}else setTimeout(()=>getGameInstance(e),10)}function runGameInstance(e){let t=null;!function n(){let a=e.scene.scenes[1];if(a){if(a.__cameraMonitorSetup||(monitorCamera(a),a.__cameraMonitorSetup=!0),a.__balanceMonitorSetup||(monitorBalance(a),a.__balanceMonitorSetup=!0),a.__landMonitorSetup||(monitorLand(a),a.__landMonitorSetup=!0),instanceActive){let r=e.scene.scenes[1].selfPlayer.playerData.label;window.postMessage({type:"VOXELS_PLAYER_LABEL",label:r})}let s=getPlayerData(e);s.inventoryData&&window.postMessage({type:"VOXELS_INV_DATA",data:s.inventoryData});try{let i=getEntities(e),o=i.storages,l=getStorages(o,e),c=e.scene.scenes[1].hoverNode,u=null;c&&c.propCache&&(c.propCache.id?u={id:c.propCache.id,owner:c.propCache.owner}:c.playerData&&"pet"===c.playerData.kind&&(u={id:c.playerData.kind,owner:c.propCache.owner}));let m={},d=getPetInventoryData(e),p=JSON.stringify(l)!==JSON.stringify(t);p&&(m.storages=l,t=l),m.hoverNode=u,m.inventory=s.inventoryData||null,m.location=s.location||null,m.coinBalance=s.coinBalance||null,m.petInventory=d||null,m.itemMixers=i.itemMixers||null,Object.keys(m).length>0&&window.postMessage({type:"VOXELS_GAME_DATA",data:m})}catch(y){console.error("An error occurred:",y)}}setTimeout(n,200)}()}function monitorCamera(e){let t=e.cameras.main,{x:n,y:a}=t.worldView,r=t.zoom,s=t.worldView,i=()=>window.postMessage({type:"CAMERA_CHANGE",data:{height:s.height,width:s.width,bottom:s.y+s.height,top:s.y,left:s.x,right:s.x+s.width,zoom:t.zoom}});e.time.addEvent({delay:1e3/60,loop:!0,callback(){let{x:e,y:s}=t.worldView,o=t.zoom;(e!==n||s!==a||o!==r)&&(n=e,a=s,r=o,i())}}),e.time.addEvent({delay:500,loop:!0,callback:i})}function monitorBalance(e){let t=e?.stateManager?.selfPlayer?.coinInventory;if(!t||!t.$items){console.warn("No coin inventory found to monitor.");return}let n=new Map;for(let[a,r]of t.$items.entries())n.set(r.currencyId,r.balance);let s=()=>{let e=[];for(let[a,r]of t.$items.entries()){let s=r.balance,i=r.currencyId;n.get(i)!==s&&(e.push({currencyId:i,balance:s}),n.set(i,s))}e.length>0&&window.postMessage({type:"BALANCE_CHANGE",data:e})};e.time.addEvent({delay:100,loop:!0,callback:s})}function monitorLand(e){let t=e?.stateManager;if(!t){console.warn("No state manager found to monitor.");return}let n=["producer","crafting","business","petcare","total"],a={mapId:"",landAttributes:new Map},r=()=>{let e={mapId:t.mapId,landAttributes:new Map},r=a.mapId!==e.mapId;for(let s of n){let i=t.mapLimits?.$items?.get(s);if(i){let{max:o,used:l}=i;e.landAttributes.set(s,{max:o,used:l});let c=a.landAttributes.get(s);c&&c.max===o&&c.used===l||(r=!0)}}r&&(a=e,window.postMessage({type:"LAND_CHANGE",data:{mapId:e.mapId,landAttributes:Array.from(e.landAttributes.entries()).map(([e,{max:t,used:n}])=>({attribute:e,max:t,used:n}))}}))};e.time.addEvent({delay:100,loop:!0,callback:r})}function getPlayerData(e){let t=[];if(e.scene.scenes[1]){let n=e.scene.scenes[1],a=n.playerId,r=n.stateManager.selfPlayer?n.stateManager.selfPlayer.farms:null,s=null,i=null;r&&r.$items&&(s=r.$items.get(0),i=r.$items.get(1));let o=n.stateManager.mapId,l=o.match(/\d+/),c=l?l[0]:"unknown",u;u=o&&""!==o.trim()?s&&o.includes(s)?`speck-farm-${c}`:i&&o.includes(i)?`speck-house-${c}`:o.includes("House")?`${c}-house`:o.includes("Farm")?`${c}-farm`:o:"unknown";let m=n.stateManager.selfPlayer?n.stateManager.selfPlayer.inventory:null,d=null;if(m){let p=m.size,y=m.activeRow,f=m.slots.$items,g=[];f.forEach((e,t)=>{g.push({slot:t,item:e.item,quantity:e.quantity})}),d={size:p,activeRow:y,items:g}}let h=0;if(n?.stateManager?.selfPlayer?.coinInventory){let A=n.stateManager.selfPlayer.coinInventory;if(A.$items){for(let[w,$]of A.$items.entries())if("cur_coins"===$.currencyId){h=$.balance;break}}}t={playerId:a,location:u,inventoryData:d,coinBalance:h}}return t}function getEntities(e){let t=[];if(!e.scene.scenes[1])return[];{let n=e.scene.scenes[1],a=n.playerId,r=n.entities,s=new Map;r.forEach((e,n)=>{e&&e.owner===a&&e.element&&(e.element.includes("storage_box")||e.element.includes("woodchest")||e.element.includes("storageChest")||e.element.includes("moca_storage")||e.element.includes("xmasStorage")||e.element.includes("halloween_2024_storage"))&&e.owner===a&&t.push(e.mid)});let i=Array.from(s,([e,t])=>({element:e,count:t})),o=null;return n.sys?.config==="roomcavehub"&&(o=[],r.forEach((e,t)=>{if(e.element&&["ent_guano_mixer","ent_spore_chamber","ent_goo_pot"].includes(e.element)&&e.currentState?.trackers){let n=getEntityInfo(e.currentState);o[e.element]={...n.trackers,state:n.state,x:e.x||null,y:e.position?.y!=null&&null!=e.height?e.position.y+e.height:null}}})),{storages:t,entities_map:i,itemMixers:o}}}function simplifyArray(e){return e&&Array.isArray(e)?e.reduce((e,t)=>(e[t.name]=t.numeric?parseFloat(t.value):t.value,e),{}):{}}function getEntityInfo(e){return e?{...e,trackers:simplifyArray(e.trackers)}:null}function getStorages(e,t){let n=t.scene.scenes[1];if(!n.stateManager||!n.stateManager.selfPlayer||!n.stateManager.selfPlayer.entities)return[];let a=n.stateManager.selfPlayer.entities.$items,r=n.entities,s=e.map(e=>{let t=a.get(e),n=r.get(e);if(t&&t.storage){let s={mid:e,size:t.storage.size,items:[],position:n?{x:n.position.x,y:n.position.y}:null};return t.storage.slots.$items.forEach((e,t)=>{e&&e.item&&s.items.push({position:e.slot,itemName:e.item,quantity:e.quantity})}),s}if(n&&n.element&&n.element.includes("woodchest")){let i;switch(n.element){case"ent_woodchest_01":i=6;break;case"ent_woodchest_02":i=12;break;case"ent_woodchest_03":i=18;break;case"ent_woodchest_04":i=24;break;default:i=0}if(i>0)return{mid:e,size:i,items:[],position:{x:n.position.x,y:n.position.y}}}return null});return s.filter(e=>null!==e)}function getPetInventoryData(e){let t=e.scene.scenes[1]?.stateManager?.selfPlayer?.pet;if(t&&t.inventory){let n=t.inventory.slots,a=[];return n.$items.forEach(e=>{e&&e.item&&a.push({position:e.slot,itemName:e.item,quantity:e.quantity||0})}),{size:t.inventory.size,items:a}}return null}window.postMessage({type:"VOXELS_INITIATED"}),window.addEventListener("message",e=>{e.source===window&&e.data.type&&"VOXELS_SET_INSTANCE_ACTIVE"===e.data.type&&(instanceActive=e.data.value)}),getGameInstance(runGameInstance);let previousCustomObjectsArray=[];function arraysAreEqual(e,t){return JSON.stringify(e)===JSON.stringify(t)}function getPropsFromTaskItems(e){let t=document.querySelector(e);if(t){let n=Object.keys(t).find(e=>e.startsWith("__reactFiber$"));if(n){let a=t[n],r=a?.memoizedProps;if(r&&r.children&&Array.isArray(r.children[0])){let s=r.children[0].map(e=>e.props),i=s.map((e,t)=>{if(e.request&&e.request.item){let n=e.request.item||{},a=e.reward.currency||{},r=e.reward.skill||{},s;switch(e.playerClassId){case"f2p":s="Basic";break;case"vip":s="VIP";break;case"landowner":s="Landowner";break;default:s="Unknown"}return{position:t,type:s,name:n.name||"N/A",tier:n.tier||"N/A",quantity:e.request.quantity||"N/A",canFill:e.canFill||!1,rewardCurrency:a.currencyId||"coins",rewardAmount:a.amount||"N/A",skillType:r.skillType||"N/A",skillXp:r.xp||"N/A"}}{let i=e.cooldownEndTimestamp;return{position:t,type:"Unknown",itemName:"Loading...",reloadTimestamp:Math.floor(i/1e3)}}});arraysAreEqual(i,previousCustomObjectsArray)||(previousCustomObjectsArray=i,window.postMessage({type:"VOXELS_TASK_DATA",value:i},"*"))}}}}window.addEventListener("message",function(e){if("VOXELS_NODE_INPAGE"===e.data.type){let t=e.data.value;t.taskContent&&setInterval(()=>getPropsFromTaskItems(t.taskContent),200)}});